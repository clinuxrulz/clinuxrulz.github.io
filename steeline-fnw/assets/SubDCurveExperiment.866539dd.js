import{l as N,c as y,a as _,A as M,z as b,i as S,b as f,N as D,a4 as Z,$ as A,I as E,e as p,s as v,S as R,f as U,t as P,m as z,y as B,B as w,a2 as O}from"./index.5aba22ff.js";import{m as V,a as F,S as G}from"./SvgWithPanZoomState.e2089103.js";import{V as H}from"./Vec3.ce1f4f7a.js";const X=P('<input type="checkbox" style="margin-left: 5px;">'),Y=P('<label style="margin-left: 2px;">Show Control Lines</label>'),j=P('<div style="flex-grow: 1; display: flex; flex-direction: column;"><div><h2>Sub-D Curve Experiment</h2><input class="btn btn-primary" type="button" style="margin-left: 5px;" value="Insert Curve"></div><div style="flex-grow: 1; display: flex; flex-direction: column; position: relative;"><div style="position: absolute; left: 0; top: 0; margin-left: 5px; margin-top: 5px;"></div></div></div>'),q=P('<input class="btn btn-primary" type="button" style="margin-left: 5px;" value="Close">'),J=P('<svg><line stroke="red" vector-effect="non-scaling-stroke" pointer-events="none"></line></svg>',4,!0),K=P('<svg><line stroke="black" vector-effect="non-scaling-stroke" pointer-events="none"></line></svg>',4,!0),oe=s=>{let[c,i]=N(void 0),[u,l]=y(V()),n=new F({state:u,setState:l,disablePan:()=>!1}),[e,o]=y({curves:[],mousePos:void 0,mkMode:void 0,showControlLines:!0}),d=_(()=>{if(e.mkMode!=null)return e.mkMode()}),a=t=>{t==null&&o("mkMode",void 0),o("mkMode",()=>t)};M(()=>{let t=c();if(t==null)return;let r=h=>{let C=d();C?.click?.call(C)},m=h=>{let C=t.getBoundingClientRect(),$=H.create(h.clientX-C.x,h.clientY-C.y);o("mousePos",$)},g=h=>{o("mousePos",void 0)};t.addEventListener("click",r),t.addEventListener("mousemove",m),t.addEventListener("mouseout",g),b(()=>{t.removeEventListener("click",r),t.removeEventListener("mousemove",m),t.removeEventListener("mouseout",g)})});let x=t=>{if(t.key=="Escape"){let r=d();r?.cancel?.call(r),a(void 0)}};document.addEventListener("keydown",x),b(()=>{document.removeEventListener("keydown",x)});let k={get mousePos(){return e.mousePos},screenPtToWorldPt:t=>n.screenPtToWorldPt(t.x,t.y),worldPtToScreenPt:t=>n.worldPtToScreenPt(t),get curves(){return e.curves},makeCurve:t=>{let r={controlPoints:t};return o("curves",[...e.curves,r]),e.curves[e.curves.length-1]},getCurveSetter(t){let r=e.curves.indexOf(t);if(r==-1)return;let[m,g]=y(e.curves[r]);return g}};const T=()=>{a(()=>new ee(k))};let W=()=>{let t=_(()=>{let r=d();if(r!=null)return r?.instructions?.call(r,{})});return z(t)},I=()=>{let t=B();return[(()=>{const r=X.cloneNode(!0);return r.addEventListener("change",m=>{o("showControlLines",m.currentTarget.checked)}),v(r,"id",t),p(()=>r.checked=e.showControlLines),r})(),(()=>{const r=Y.cloneNode(!0);return v(r,"for",t),r})()]};return(()=>{const t=j.cloneNode(!0),r=t.firstChild,m=r.firstChild,g=m.nextSibling,h=r.nextSibling,C=h.firstChild;return S(r,f(D,{get when(){return s.onClose},children:$=>(()=>{const L=q.cloneNode(!0);return L.$$click=()=>$()(),L})()}),g),g.$$click=()=>T(),S(r,f(I,{}),null),S(C,f(W,{})),S(h,f(G,Z({style:{"flex-grow":"1"},showGrid:!0,fontSize:12,state:u,onRefSvg:$=>i($)},()=>n.mouseAndTouchEventHandlers(),{get children(){return f(A,{get each(){return e.curves},children:$=>f(Q,{get controlPoints(){return $.controlPoints},get showControlLines(){return e.showControlLines}})})}})),null),t})()},Q=s=>{let c=_(()=>te(s.controlPoints,5)),i=()=>s.controlPoints;return[f(R,{get when(){return s.showControlLines},get children(){return f(E,{get each(){return[...Array(i().length-1)].map((u,l)=>l)},children:u=>(()=>{const l=J.cloneNode(!0);return p(n=>{const e=i()[u()].x,o=-i()[u()].y,d=i()[u()+1].x,a=-i()[u()+1].y;return e!==n._v$&&v(l,"x1",n._v$=e),o!==n._v$2&&v(l,"y1",n._v$2=o),d!==n._v$3&&v(l,"x2",n._v$3=d),a!==n._v$4&&v(l,"y2",n._v$4=a),n},{_v$:void 0,_v$2:void 0,_v$3:void 0,_v$4:void 0}),l})()})}}),f(E,{get each(){return[...Array(c().length-1)].map((u,l)=>l)},children:u=>(()=>{const l=K.cloneNode(!0);return p(n=>{const e=c()[u()].x,o=-c()[u()].y,d=c()[u()+1].x,a=-c()[u()+1].y;return e!==n._v$5&&v(l,"x1",n._v$5=e),o!==n._v$6&&v(l,"y1",n._v$6=o),d!==n._v$7&&v(l,"x2",n._v$7=d),a!==n._v$8&&v(l,"y2",n._v$8=a),n},{_v$5:void 0,_v$6:void 0,_v$7:void 0,_v$8:void 0}),l})()})]};class ee{constructor(c){let[i,u]=y({currentCurve:void 0}),l=_(()=>{if(c.mousePos!=null)return c.screenPtToWorldPt(c.mousePos)});M(()=>{let e=l();if(e==null)return;let o=w(()=>i.currentCurve?.value);if(o==null||w(()=>o.controlPoints.length)==0)return;let d=c.getCurveSetter(o);d?.("controlPoints",[...w(()=>o.controlPoints.slice(0,-1)),e])});let n=e=>{if(i.currentCurve==null){let o=c.makeCurve([e,e]);u("currentCurve",new O(o))}else{let o=c.getCurveSetter(i.currentCurve.value);if(o==null)return;o("controlPoints",[...i.currentCurve.value.controlPoints,i.currentCurve.value.controlPoints[i.currentCurve.value.controlPoints.length-1]])}};this.instructions=_(()=>"Click in your control points. Then press escape when finished."),this.click=()=>{let e=l();e!=null&&n(e)},this.cancel=()=>{if(i.currentCurve==null||i.currentCurve.value.controlPoints.length==0)return;let e=c.getCurveSetter(i.currentCurve.value);e?.("controlPoints",i.currentCurve.value.controlPoints.slice(0,-1))}}}function te(s,c){for(let i=0;i<c;i++){let u=[];u.push(s[0]);for(let l=0;l<s.length-2;l++){let n=s[l],e=s[l+1],o=s[l+2],d=n.add(e).scale(.5),a=e.add(o).scale(.5),k=d.add(a).scale(.5).add(e).scale(.5);u.push(d,k)}s.length>=2&&u.push(s[s.length-2].add(s[s.length-1]).scale(.5)),u.push(s[s.length-1]),s=u}return s}U(["click"]);export{oe as default};
