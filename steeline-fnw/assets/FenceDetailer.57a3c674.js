import{o as D,c as N,g as q,a as _,z as J,i as b,b as c,S as C,M as G,d as Q,I as z,e as E,s as g,f as R,t as f,H as Z,u as ee}from"./index.5aba22ff.js";import{k as te,P as ne}from"./PropertiesForm.c69fa44e.js";import{m as oe,a as re,S as se}from"./SvgWithPanZoomState.e2089103.js";import{V as T}from"./Vec3.ce1f4f7a.js";const ie=f('<button class="btn btn-primary" style="margin-left: 5px; margin-bottom: 5px;">Close</button>'),le=f("<br>"),de=f("<b>Insert Fence Mode:</b>"),ae=f("<b>Insert Gate Mode:</b>"),ce=f("<div></div>"),ue=f('<div style="flex-grow: 1; display: flex; flex-direction: column; overflow: hidden;"><div><h2>Fence Detailer</h2><button type="button" class="btn btn-primary" style="margin-left: 5px; margin-right: 5px; margin-bottom: 5px;">Insert Fence</button><button type="button" class="btn btn-primary" style="margin-right: 5px; margin-bottom: 5px;">Insert Gate</button><br></div><div style="flex-grow: 1; display: flex; flex-direction: row; overflow: hidden;"><div style="flex-grow: 1; overflow: hidden;"></div></div></div>'),fe=f('<svg><rect fill="green"></rect></svg>',4,!0),me=f('<svg><rect fill="none" stroke="blue"></rect></svg>',4,!0),pe=w=>{D(()=>{document.title="Tool Box - Fence Detailer"});var P=void 0;const[n,m]=N({unitScale:100/8}),[M,H]=N(oe());new ResizeObserver(e=>{for(const t of e)t.contentBoxSize&&q(()=>{m("svgWidth",t.contentRect.width),m("svgHeight",t.contentRect.height)})});const O=_(()=>n.mode!=null);let p=new re({state:M,setState:H,disablePan:O});const U=()=>{m("mode",Z({type:"InsertFence",fencePts:[]}))},V=()=>{m("mode",Z({type:"InsertGate"}))},B=e=>{let t=p.screenPtToWorldPt(e.offsetX,e.offsetY);t=T.create(F(t.x),F(t.y)),m("mode",{toPt:t})},L=e=>{m("mode",t=>t?.type!="InsertFence"||t.toPt==null?t:{...t,fencePts:[...t.fencePts,t.toPt]})},A=e=>{n.mode?.type=="InsertFence"&&L(),p.onMouseDown(e)},K=e=>{p.onMouseUp(e)},X=e=>{n.mode?.type=="InsertFence"&&B(e),p.onMouseMove(e)},Y=e=>{p.onWheel(e)},S=e=>{e.key=="Escape"&&n.mode!=null&&m("mode",void 0)},F=e=>e*n.unitScale,u=e=>e/n.unitScale;D(()=>{document.addEventListener("keydown",S)}),J(()=>{document.removeEventListener("keydown",S)});const I=_(()=>{switch(n.mode?.type){case"InsertFence":return[{displayName:"Fence",fields:[te({displayName:()=>"Panel Size",value:()=>"1200H 3100W",setValue:e=>{},parse:e=>e,toString:e=>e})],expanded:()=>!0}];case"InsertGate":return[];default:return[]}}),W=_(()=>{if(n.mode?.type!="InsertFence")return[];let e=[];const t=(s,l)=>{let v=l.sub(s).normalize(),$=l.sub(s).length(),y=Math.atan2(v.y,v.x)*180/Math.PI,h=2370,r=65,i=Math.ceil($/(h+r)),o=s;for(let d=0;d<i;++d){let a;d==i-1?a=$%(h+r):a=h,e.push({x:o.x,y:o.y,angle:y,len:a}),o=o.add(v.scale(h+r))}};for(let s=0;s<n.mode.fencePts.length-1;++s)t(n.mode.fencePts[s],n.mode.fencePts[s+1]);return n.mode.fencePts.length!=0&&n.mode.toPt!=null&&t(n.mode.fencePts[n.mode.fencePts.length-1],n.mode.toPt),e}),j=_(()=>{if(n.mode?.type!="InsertFence")return[];let e=[],t=65;for(let s of W()){let l=T.create(s.x,s.y);e.push({x:l.x,y:l.y,width:t,height:t})}return n.mode.toPt!=null&&e.push({x:n.mode.toPt.x-.5*t,y:n.mode.toPt.y+.5*t,width:t,height:t}),e});return(()=>{const e=ue.cloneNode(!0),t=e.firstChild,s=t.firstChild,l=s.nextSibling,v=l.nextSibling;v.nextSibling;const $=t.nextSibling,y=$.firstChild;b(t,c(C,{get when(){return w.onClose!=null},get children(){return[(()=>{const r=ie.cloneNode(!0);return r.$$click=()=>{w.onClose!=null&&w.onClose()},r})(),le.cloneNode(!0)]}}),l),l.$$click=()=>U(),v.$$click=()=>V(),b(t,c(Q,{get children(){return[c(G,{get when(){return n.mode?.type=="InsertFence"},get children(){return[de.cloneNode(!0)," Fill out form and start drawing online of fence."]}}),c(G,{get when(){return n.mode?.type=="InsertGate"},get children(){return[ae.cloneNode(!0)," Fill out form and click a spot along the fence to insert gate."]}})]}}),null),b($,c(C,{get when(){return I().length!=0},get children(){const r=ce.cloneNode(!0);return b(r,c(ne,{get fieldGroups(){return I()}})),r}}),y);const h=P;return typeof h=="function"?ee(h,y):P=y,b(y,c(se,{showGrid:!0,fontSize:12,state:M,onMouseDown:A,onMouseUp:K,onMouseMove:X,onWheel:Y,style:{width:"100%",height:"100%"},get children(){return[c(z,{get each(){return j()},children:r=>(()=>{const i=fe.cloneNode(!0);return E(o=>{const d=u(r().x),a=-u(r().y),x=u(r().width),k=u(r().height);return d!==o._v$&&g(i,"x",o._v$=d),a!==o._v$2&&g(i,"y",o._v$2=a),x!==o._v$3&&g(i,"width",o._v$3=x),k!==o._v$4&&g(i,"height",o._v$4=k),o},{_v$:void 0,_v$2:void 0,_v$3:void 0,_v$4:void 0}),i})()}),c(z,{get each(){return W()},children:r=>(()=>{const i=me.cloneNode(!0);return E(o=>{const d="translate("+u(r().x)+","+u(-r().y)+") rotate("+-r().angle+")",a=u(r().len),x=u(64);return d!==o._v$5&&g(i,"transform",o._v$5=d),a!==o._v$6&&g(i,"width",o._v$6=a),x!==o._v$7&&g(i,"height",o._v$7=x),o},{_v$5:void 0,_v$6:void 0,_v$7:void 0}),i})()})]}})),e})()};R(["click"]);export{pe as default};
