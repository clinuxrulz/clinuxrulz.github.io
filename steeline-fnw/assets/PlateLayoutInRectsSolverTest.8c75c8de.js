import{c as O,a as q,o as W,a2 as Z,A as B,e as k,s as w,i as $,b as X,N as G,S as L,a4 as H,$ as R,f as z,t as S,g as j}from"./index.5aba22ff.js";import{m as U,a as J,S as K}from"./SvgWithPanZoomState.e2089103.js";import{H as Q}from"./HexagonalFirePit.41ea653b.js";import{L as ee}from"./Labeler.42ece7e8.js";import{R as te}from"./Ray2D.01cdc921.js";import{V}from"./Vec3.ce1f4f7a.js";import{T as A,C as D}from"./Transform2D.200bb15c.js";import"./Component.6024a649.js";class le{constructor(){this.data=new Map}readVal(l){let r=this.data.get(l);return r==null&&(r=Math.random()*100,this.data.set(l,r)),r}writeVal(l,r){this.data.set(l,r)}}class ae{constructor(){this.freeIds=[],this.nextId=0,this.constraints=[],this.valueTable=new le,this.stepMultiplier=.01,this._solveIterate_valIdsSet=new Set,this._solveIterate_dfdvMap=new Map}allocId(){let l=this.freeIds.pop();return l==null&&(l=this.nextId++),l}freeId(l){this.freeIds.push(l)}addConstraint(l){this.constraints.push(l)}evalError(){let l=0;for(let r of this.constraints)l+=r.evalError(this.valueTable);return l}evalMaxError(){let l=0;for(let r of this.constraints)l=Math.max(l,r.evalError(this.valueTable));return l}solveIterate(){this._solveIterate_valIdsSet.clear(),this._solveIterate_dfdvMap.clear();let l=this._solveIterate_valIdsSet,r=this._solveIterate_dfdvMap;{let m=T=>l.add(T);for(let T of this.constraints)T.getReferencedValuesById(m)}let c=this.evalError(),M=1e-6;for(let m of l){let T=this.valueTable.readVal(m);this.valueTable.writeVal(m,T+M);let N=(this.evalError()-c)/M;this.valueTable.writeVal(m,T),r.set(m,N)}this.evalError();for(let m of l){let N=this.stepMultiplier*c,Y=this.valueTable.readVal(m);this.valueTable.writeVal(m,Y-Math.max(-20,Math.min(20,(r.get(m)??0)*N)))}}}class re{constructor(l){this.plates=[],this.rects=[];let r=new ae,c=[];for(let e of l.plates)for(let h=0;h<e.quantity;++h)c.push({plate:e,oXId:r.allocId(),oYId:r.allocId(),uXId:r.allocId(),uYId:r.allocId()});let M=[],m=0;for(let e=0;e<l.rects.quantity;++e)M.push({x:2e3,y:m,length:l.rects.length,width:l.rects.width}),m+=l.rects.width+20;let T={displayName:"Custom",typeName:"Custom"};for(let e of c){let h={type:T,getReferencedValuesById(v){v(e.oXId),v(e.oYId),v(e.uXId),v(e.uYId)},evalError(v){let i=0,x=0,p=v.readVal(e.oXId),d=v.readVal(e.oYId),o=v.readVal(e.uXId),t=v.readVal(e.uYId),a=Math.sqrt(o*o+t*t);o/=a,t/=a;let n=-t,I=o;for(let f of e.plate.vertices){let b=p+f.x*o+f.y*n,g=d+f.x*t+f.y*I,y=Number.POSITIVE_INFINITY,s=Number.POSITIVE_INFINITY;for(let u of M){let E=0,_=0;E=Math.max(E,u.x-b),E=Math.max(E,b-(u.x+u.length)),_=Math.max(_,u.y-g),_=Math.max(_,g-(u.y+u.width)),y=Math.min(y,E),s=Math.min(s,_)}i=Math.max(i,y),x=Math.max(x,s)}return Math.max(i,x)}};r.addConstraint(h)}let N=(e,h)=>{let v=0;for(let i=0;i<e.length;++i){let x=(i+1)%e.length,p=e[i],o=e[x].sub(p).normalize();if(!Number.isFinite(o.x))continue;let t=V.create(-o.y,o.x),a=te.fromOriginDirection(p,t),n=Number.POSITIVE_INFINITY,I=Number.NEGATIVE_INFINITY;for(let g of e)n=Math.min(n,a.closestTimeToPoint(g)),I=Math.max(I,a.closestTimeToPoint(g));let f=Number.POSITIVE_INFINITY,b=Number.NEGATIVE_INFINITY;for(let g of h)f=Math.min(f,a.closestTimeToPoint(g)),b=Math.max(b,a.closestTimeToPoint(g));if(n>b||I<f)return 0;v+=Math.abs(Math.min(I,b)-Math.max(n,f))}return v},Y={type:T,getReferencedValuesById(e){for(let h of c)e(h.oXId),e(h.oYId),e(h.uXId),e(h.uYId)},evalError(e){let h=c.map(i=>{let x=e.readVal(i.oXId),p=e.readVal(i.oYId),d=e.readVal(i.uXId),o=e.readVal(i.uYId),t=Math.sqrt(d*d+o*o);d/=t,o/=t;let a=-o,n=d,I=i.plate.vertices.map(s=>V.create(x+s.x*d+s.y*a,p+s.x*o+s.y*n)),f=I.reduce((s,u)=>Math.min(s,u.x),Number.POSITIVE_INFINITY),b=I.reduce((s,u)=>Math.max(s,u.x),Number.NEGATIVE_INFINITY),g=I.reduce((s,u)=>Math.min(s,u.y),Number.POSITIVE_INFINITY),y=I.reduce((s,u)=>Math.max(s,u.y),Number.NEGATIVE_INFINITY);return{outline:I,minX:f,maxX:b,minY:g,maxY:y}});h.sort((i,x)=>i.minX-x.minX);let v=0;for(let i=0;i<h.length-1;++i){let x=h[i],p=[x];for(let d=i+1;d<h.length;++d){let o=h[d];if(o.minX>x.maxX)break;p.push(o)}p.sort((d,o)=>d.minY-o.minY);for(let d=0;d<p.length-1;++d){let o=p[d],t=[o];for(let a=d+1;a<p.length;++a){let n=p[a];if(n.minY>o.maxY)break;t.push(n)}for(let a=0;a<t.length-1;++a)for(let n=a+1;n<t.length;++n)v+=Math.max(N(t[a].outline,t[n].outline),N(t[n].outline,t[a].outline))}}return v}};r.addConstraint(Y),this.constraintEngine=r,this.plates=c,this.rects=M}get valueTable(){return this.constraintEngine.valueTable}iterate(l){this.constrainLengthOfU(),this.constraintEngine.stepMultiplier=l,this.constraintEngine.solveIterate()}evalMaxError(){return this.constraintEngine.evalMaxError()}constrainLengthOfU(){for(let l of this.plates){let r=this.constraintEngine.valueTable.readVal(l.uXId),c=this.constraintEngine.valueTable.readVal(l.uYId),M=r*r+c*c;if(r=r/M*1e4,c=c/M*1e4,!Number.isFinite(r)){let m=Math.random()*2*Math.PI;r=1e4*Math.cos(m),c=1e4*Math.sin(m)}this.constraintEngine.valueTable.writeVal(l.uXId,r),this.constraintEngine.valueTable.writeVal(l.uYId,c)}}}const ne=S('<input class="btn btn-primary" type="button" style="margin-left: 10px;" value="Solve">'),oe=S('<input class="btn btn-primary" type="button" style="margin-left: 10px;" value="Stop">'),ie=S('<svg><rect fill="none" stroke="black" stroke-width="1" vector-effect="non-scaling-stroke"></rect></svg>',4,!0),se=S('<div style="flex-grow: 1; display: flex; flex-direction: column;"><div></div>Error: <!> <br>Step Multiplier: <input type="text"></div>'),ue=S('<input class="btn btn-primary" type="button" style="margin-left: 10px;" value="Close">'),de=S('<svg><polygon fill="none" stroke-width="1" stroke="blue" vector-effect="non-scaling-stroke"></polygon></svg>',4,!0),xe=P=>{let[l,r]=O({solving:!1,plates:[],maxError:0,stepMultiplier:.01}),[c,M]=O({...U(),scale:.2,panX:-1500,panY:-3e3}),m=new J({state:c,setState:M,disablePan:()=>!1}),T=new Q({diameter:()=>760,baseDiameter:()=>420,baseHeight:()=>152,headHeight:q(()=>152+185),legPitch:()=>80}),N=new ee;T.allocateLabels(N);let Y=[];for(let t of T.mkPlatesForDoc(N)()){let a=t();Y.push({vertices:a.outline,quantity:a.quantity*3})}let e=new re({plates:Y,rects:{length:2400,width:1200,quantity:1}});for(let t of e.plates)e.valueTable.writeVal(t.oXId,Math.random()*5e3),e.valueTable.writeVal(t.oYId,Math.random()*5e3);W(()=>{r("plates",e.plates.map(t=>({plate:new Z(t.plate),space:A.create(V.create(e.valueTable.readVal(t.oXId),e.valueTable.readVal(t.oYId)),D.xy(V.create(e.valueTable.readVal(t.uXId),e.valueTable.readVal(t.uYId)).normalize()))}))),r("maxError",e.evalMaxError())});let h=()=>{j(()=>{let t=0;for(let a of e.plates)r("plates",t,"space",A.create(V.create(e.valueTable.readVal(a.oXId),e.valueTable.readVal(a.oYId)),D.xy(V.create(e.valueTable.readVal(a.uXId),e.valueTable.readVal(a.uYId)).normalize()))),t+=1;r("maxError",e.evalMaxError())})},v=()=>{!l.solving||(e.iterate(l.stepMultiplier),h(),requestAnimationFrame(v))};B(()=>{l.solving&&requestAnimationFrame(v)});let i=()=>{r("solving",!0)},x=()=>{r("solving",!1)},p=(()=>{const t=ne.cloneNode(!0);return t.$$click=()=>i(),t})(),d=(()=>{const t=oe.cloneNode(!0);return t.$$click=()=>x(),t})(),o=e.rects.map(t=>(()=>{const a=ie.cloneNode(!0);return k(n=>{const I=t.x,f=-t.y-t.width,b=t.length,g=t.width;return I!==n._v$&&w(a,"x",n._v$=I),f!==n._v$2&&w(a,"y",n._v$2=f),b!==n._v$3&&w(a,"width",n._v$3=b),g!==n._v$4&&w(a,"height",n._v$4=g),n},{_v$:void 0,_v$2:void 0,_v$3:void 0,_v$4:void 0}),a})());return(()=>{const t=se.cloneNode(!0),a=t.firstChild,n=a.nextSibling,I=n.nextSibling,f=I.nextSibling,b=f.nextSibling,g=b.nextSibling,y=g.nextSibling;return $(a,X(G,{get when(){return P.onClose},children:s=>(()=>{const u=ue.cloneNode(!0);return u.$$click=()=>s()(),u})()}),null),$(a,X(L,{get when(){return!l.solving},children:p}),null),$(a,X(L,{get when(){return l.solving},children:d}),null),$(t,()=>l.maxError.toFixed(1),I),y.$$input=s=>{let u=Number.parseFloat(s.currentTarget.value);!Number.isFinite(u)&&u!=0||r("stepMultiplier",u)},$(t,X(K,H({showGrid:!1,fontSize:12,state:c,style:{"flex-grow":"1"}},()=>m.mouseAndTouchEventHandlers(),{get children(){return[o,X(R,{get each(){return l.plates},children:s=>{let u=q(()=>{let E=[];for(let F of s.plate.value.vertices)E.push(s.space.pointFromSpace(F));let _="";{let F=!0;for(let C of E)F?F=!1:_+=" ",_+=C.x+","+-C.y}return _});return(()=>{const E=de.cloneNode(!0);return k(()=>w(E,"points",u())),E})()}})]}})),null),k(()=>y.value=l.stepMultiplier),t})()};z(["click","input"]);export{xe as default};
