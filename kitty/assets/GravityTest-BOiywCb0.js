import{i as y,t as f}from"./lib-oUuyS5Hd.js";import{l as u,F as n}from"./dev-B9-ass9r.js";import"./index-XNH-lkY3.js";import"./dev-CC7pdsS5.js";var C=f(`<div><table><thead></thead><tbody><tr><td colspan=2 style="border:1px solid blue;">p0 = 0<br>v0 = 50<br>a = -10</td></tr><tr><td style="border:1px solid blue;"><b>Actual Formula:</b><br><code>p(t) = p0 + v0.t + ½.a.t²</code></td><td style="border:1px solid blue;"><b>Modified Newton's Method</b><br><code>dummy1 = v0 + ½a<br>dummy2(0) = 0<br>dummy2(t + 1) = dummy2(t) + a<br>p(0) = p0<br>p(t + 1) = p(t) + dummy1 + dummy2(t)</code></td></tr><tr><td style="border:1px solid blue;"><code></code></td><td style="border:1px solid blue;"><code>`),c=f("<br>");const A=()=>{let p=0,b=50,i=-10,h=[];for(let t=0;t<=50;++t){let e=p+b*t+.5*i*t*t;h.push(e)}let m=[];{let t=.5*i,e=b+t,l=0,r=p,d=0;for(;d<=50;)m.push(r),++d,r+=e+l,l+=i}return(()=>{var t=C(),e=t.firstChild,l=e.firstChild,r=l.nextSibling,d=r.firstChild,_=d.nextSibling,$=_.nextSibling,a=$.firstChild,x=a.firstChild,g=a.nextSibling,v=g.firstChild;return t.style.setProperty("width","100%"),t.style.setProperty("height","100%"),t.style.setProperty("overflow-y","auto"),e.style.setProperty("width","100%"),y(x,u(n,{each:h,children:(o,s)=>["p(",s,") = ",o,c()]})),y(v,u(n,{each:m,children:(o,s)=>["p(",s,") = ",o,c()]})),t})()};export{A as default};
