import{e as F,o as c,v as P,i as _,d as C,t as g,u as S,J as $}from"./lib-DlbUTQnC.js";import{t as x,l as h,S as v,c as z,Q as I,q as E}from"./dev-B9-ass9r.js";import{F as R}from"./index-BXC37FZC.js";import"./index-XNH-lkY3.js";import"./dev-CC7pdsS5.js";class A{db;constructor(l){this.db=l}static init(){return new Promise(l=>{let s=window.indexedDB.open("level-builder",1);s.onerror=()=>{l(F("Failed to load database."))},s.onupgradeneeded=()=>{let i=s.result;i.objectStoreNames.contains("files")||i.createObjectStore("files")},s.onsuccess=()=>{let i=s.result;l(c(new A(i)))}})}rootFolderId="root";getFilesAndFolders(l){return new Promise(s=>{let i=this.db.transaction("files","readwrite").objectStore("files").get(l+"_files_and_folders");i.onerror=()=>{s(F("Unable to retrieve root files and folders."))},i.onsuccess=()=>{let o=i.result??[];s(c(o))}})}async createFile(l,s,i){let o=await this.getFilesAndFolders(l);if(o.type=="Err")return o;let p=o.value,a={id:P(),type:"File",name:s},r=[...p,a];{let e=await new Promise(t=>{let d=this.db.transaction("files","readwrite").objectStore("files").put(l,a.id+"_parent");d.onerror=()=>{t(F("Could not add file."))},d.onsuccess=()=>{t(c({}))}});if(e.type=="Err")return e}{let e=await new Promise(t=>{let d=this.db.transaction("files","readwrite").objectStore("files").put(r,l+"_files_and_folders");d.onerror=()=>{t(F("Could not add file."))},d.onsuccess=()=>{t(c({}))}});if(e.type=="Err")return e}return await this.overwriteFile(a.id,i),c({fileId:a.id})}readFile(l){return new Promise(s=>{let i=this.db.transaction("files","readwrite").objectStore("files").get(l+"_data");i.onerror=()=>{s(F("Unable to read file."))},i.onsuccess=()=>{let o=i.result;s(c(o))}})}overwriteFile(l,s){return new Promise(i=>{let o=this.db.transaction("files","readwrite").objectStore("files").put(s,l+"_data");o.onerror=()=>{i(F("Unable to read file."))},o.onsuccess=()=>{i(c({}))}})}async deleteFile(l){let s=await new Promise(r=>{let e=this.db.transaction("files","readwrite").objectStore("files").get(l+"_parent");e.onerror=()=>{r(F("Failed to get parent folder of file."))},e.onsuccess=()=>{r(c(e.result))}});if(s.type=="Err")return s;let i=s.value,o=await this.getFilesAndFolders(i);if(o.type=="Err")return o;let a=o.value.filter(r=>r.id!==l);if(a.length!=0){let r=await new Promise(e=>{let t=this.db.transaction("files","readwrite").objectStore("files").put(a,i+"_files_and_folders");t.onerror=()=>{e(F("Could not delete file."))},t.onsuccess=()=>{e(c({}))}});if(r.type=="Err")return r}else{let r=await new Promise(e=>{let t=this.db.transaction("files","readwrite").objectStore("files").delete(i+"_files_and_folders");t.onerror=()=>{e(F("Could not delete file."))},t.onsuccess=()=>{e(c({}))}});if(r.type=="Err")return r}{let r=await new Promise(e=>{let t=this.db.transaction("files","readwrite").objectStore("files").delete(l+"_parent");t.onerror=()=>{e(F("Could not add file."))},t.onsuccess=()=>{e(c({}))}});if(r.type=="Err")return r}return new Promise(r=>{let e=this.db.transaction("files","readwrite").objectStore("files").delete(l+"_data");e.onerror=()=>{r(F("Could not add file."))},e.onsuccess=()=>{r(c({}))}})}async createFolder(l,s){let i=await this.getFilesAndFolders(l);if(i.type=="Err")return i;let o=i.value,p={id:P(),type:"Folder",name:s},a=[...o,p];{let r=await new Promise(e=>{let t=this.db.transaction("files","readwrite").objectStore("files").put(l,p.id+"_parent");t.onerror=()=>{e(F("Could not add file."))},t.onsuccess=()=>{e(c({}))}});if(r.type=="Err")return r}{let r=await new Promise(e=>{let t=this.db.transaction("files","readwrite").objectStore("files").put(a,l+"_files_and_folders");t.onerror=()=>{e(F("Could not add file."))},t.onsuccess=()=>{e(c({}))}});if(r.type=="Err")return r}return c({folderId:p.id})}async deleteFolder(l){if(l==this.rootFolderId)return F("Can not delete root folder.");{let r=await this.getFilesAndFolders(l);if(r.type=="Err")return r;let e=r.value;for(let d of e)switch(d.type){case"File":{let f=await this.deleteFile(d.id);if(f.type=="Err")return f;break}case"Folder":{let f=await this.deleteFolder(d.id);if(f.type=="Err")return f;break}}let t=await new Promise(d=>{let f=this.db.transaction("files","readwrite").objectStore("files").delete(l+"_files_and_folders");f.onerror=()=>{d(F("Could not delete file."))},f.onsuccess=()=>{d(c({}))}});if(t.type=="Err")return t}let s=await new Promise(r=>{let e=this.db.transaction("files","readwrite").objectStore("files").get(l+"_parent");e.onerror=()=>{r(F("Failed to get parent folder of file."))},e.onsuccess=()=>{r(c(e.result))}});if(s.type=="Err")return s;let i=s.value,o=await this.getFilesAndFolders(i);if(o.type=="Err")return o;let a=o.value.filter(r=>r.id!==l);if(a.length!=0){let r=await new Promise(e=>{let t=this.db.transaction("files","readwrite").objectStore("files").put(a,i+"_files_and_folders");t.onerror=()=>{e(F("Could not delete file."))},t.onsuccess=()=>{e(c({}))}});if(r.type=="Err")return r}else{let r=await new Promise(e=>{let t=this.db.transaction("files","readwrite").objectStore("files").delete(i+"_files_and_folders");t.onerror=()=>{e(F("Could not delete file."))},t.onsuccess=()=>{e(c({}))}});if(r.type=="Err")return r}{let r=await new Promise(e=>{let t=this.db.transaction("files","readwrite").objectStore("files").delete(l+"_parent");t.onerror=()=>{e(F("Could not add file."))},t.onsuccess=()=>{e(c({}))}});if(r.type=="Err")return r}return c({})}async getParentFolderId(l){return l==this.rootFolderId?Promise.resolve(c(void 0)):await new Promise(s=>{let i=this.db.transaction("files","readwrite").objectStore("files").get(l+"_parent");i.onerror=()=>{s(F("Failed to get parent folder of file."))},i.onsuccess=()=>{s(c(i.result))}})}async delete(l){let s=await new Promise(r=>{let e=this.db.transaction("files","readwrite").objectStore("files").get(l+"_parent");e.onerror=()=>{r(F("Failed to get parent folder of file."))},e.onsuccess=()=>{r(c(e.result))}});if(s.type=="Err")return s;let i=s.value,o=await this.getFilesAndFolders(i);if(o.type=="Err")return o;let a=o.value.find(r=>r.id===l);if(a==null)return F("Failed to delete file or folder");switch(a.type){case"File":return this.deleteFile(l);case"Folder":return this.deleteFolder(l)}}}var T=g("<div>"),N=g("<button class=btn>Export to Zip"),U=g("<button class=btn>Import from Zip"),Z=g("<input type=file hidden>"),O=g("<br>"),V=g("<div><ul>"),L=g("<div>Add File:<input type=file><button class=btn>Add Folder"),W=g("<li><div style=font-size:20pt;display:inline-block;margin-left:5px;margin-right:5px;></div><button class=btn style=margin-left:10px;>Delete"),q=g('<i class="fa-solid fa-file">'),B=g('<i class="fa-solid fa-folder-open">');const H=()=>{let[b,{mutate:l}]=x(()=>A.init()),s=async()=>{let o=b();if(o?.type!="Ok")return;let p=o.value,a=new $,r=async(t,d)=>{let f=await p.getFilesAndFolders(d);if(f.type=="Err")return;let n=f.value;for(let w of n)switch(w.type){case"File":{let y=await p.readFile(w.id);if(y.type=="Err")continue;let m=y.value;t.file(w.name,m);break}case"Folder":let u=t.folder(w.name);if(u==null)continue;await r(u,w.id);break}};await r(a,p.rootFolderId);let e=await a.generateAsync({type:"blob"});R.saveAs(e,"kitty_export.zip")},i=async o=>{debugger;let p=b();if(p?.type!="Ok")return;let a=p.value;{let t=await a.getFilesAndFolders(a.rootFolderId);if(t.type=="Err")return;let d=t.value;for(let f of d)await a.delete(f.id)}let r=await $.loadAsync(o);async function e(t,d){debugger;let f;if(t=="")f=r;else{let u=r.folder(t);if(u==null)return;f=u}if(!f){console.warn(`Folder "${t}" not found in the zip.`);return}const n=[];f.forEach((u,y)=>{const m=t+(t&&!t.endsWith("/")?"/":"")+u;n.push({name:m,relativePath:u,isFolder:y.dir})});let w=[];for(let u of n)u.isFolder&&w.push(u.relativePath);for(const u of n)if(!w.some(y=>u.relativePath.startsWith(y))&&!u.isFolder){let y=r.file(u.name);if(y==null)continue;let m=await y.async("blob");await a.createFile(d,u.relativePath,m)}for(const u of n)if(u.isFolder){let y=u.relativePath;y.endsWith("/")&&(y=y.slice(0,y.length-1));let m=await a.createFolder(d,y);if(m.type=="Err")continue;let{folderId:j}=m.value;await e(u.name,j)}}await e("",a.rootFolderId),l(void 0),l(c(a))};return(()=>{var o=T();return o.style.setProperty("width","100%"),o.style.setProperty("height","100%"),o.style.setProperty("overflow-y","auto"),_(o,h(v,{get when(){return b()},keyed:!0,get fallback(){return"Loading..."},children:p=>{if(p.type=="Err")return p.message;let a=p.value,r=k({vfs:a,currentFolderId:()=>a.rootFolderId}),e;return[(()=>{var t=N();return t.$$click=()=>s(),t})(),(()=>{var t=U();return t.$$click=()=>e.click(),t})(),(()=>{var t=Z();t.$$input=f=>{let n=f.currentTarget.files;if(n==null||n.length!=1)return;let w=n[0];i(w)};var d=e;return typeof d=="function"?S(d,t):e=t,t})(),O(),h(r.Render,{})]}})),o})()},k=b=>{let[l,{refetch:s}]=x(b.currentFolderId,i=>b.vfs.getFilesAndFolders(i));return{refresh:()=>s(),Render:()=>h(v,{get when(){return l()},keyed:!0,children:i=>{if(i.type=="Err")return i.message;let o=i.value,p,[a,r]=z();return I(()=>{let e=p.getBoundingClientRect();r(e.height-5)}),E(()=>(a()==null,"5px 100%")),[(()=>{var e=V(),t=e.firstChild,d=p;return typeof d=="function"?S(d,e):p=e,e.style.setProperty("margin-left","15px"),e.style.setProperty("margin-top","-6px"),e.style.setProperty("padding-top","6px"),e.style.setProperty("padding-left","20px"),e.style.setProperty("background","linear-gradient(blue 0 0) 10px"),e.style.setProperty("background-size","5px calc(100% - 20px)"),e.style.setProperty("background-position-y","0"),e.style.setProperty("background-repeat","no-repeat"),_(t,()=>o.map(f=>[(()=>{var n=W(),w=n.firstChild,u=w.nextSibling;return n.style.setProperty("display","flex"),n.style.setProperty("flex-direction","row"),n.style.setProperty("align-items","center"),n.style.setProperty("margin-left","-20px"),n.style.setProperty("padding-left","30px"),n.style.setProperty("background","linear-gradient(blue 0 0) 10px"),n.style.setProperty("background-size","20px 5px"),n.style.setProperty("background-repeat","no-repeat"),_(w,(()=>{var y=E(()=>f.type=="File");return()=>y()?q():B()})()),_(n,()=>f.name,u),u.$$click=async()=>{await b.vfs.delete(f.id),s()},n})(),h(v,{get when(){return f.type=="Folder"},get children(){return(()=>{let n=k({vfs:b.vfs,currentFolderId:()=>f.id});return h(n.Render,{})})()}})])),e})(),(()=>{var e=L(),t=e.firstChild,d=t.nextSibling,f=d.nextSibling;return d.addEventListener("change",async n=>{if(n.currentTarget.files==null)return;let w=n.currentTarget.files;for(let u of w)await b.vfs.createFile(b.currentFolderId(),u.name,u);s()}),f.$$click=async()=>{let n=window.prompt("Enter Folder Name:");n!=null&&(n=n.trim(),n.length!=0&&(await b.vfs.createFolder(b.currentFolderId(),n),s()))},e})()]}})}};C(["click","input"]);export{H as default};
